# Copyright (c) 2025 Columnar Technologies, Inc.  All rights reserved.

name: Release dbc

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  id-token: write # For AWS auth

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'

      - name: AWS Login
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a  # v4.3.1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: deploy-production-${{ github.run_id }}-${{ github.run_attempt }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: "Set up Python"
        uses: actions/setup-python@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install Wheel
        run: pip install wheel

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: "columnar"
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        id: gorelease
        with:
          distribution: goreleaser-pro
          version: "~> v2"
          args: release -p 10 --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN}}          

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # 1.12.4
        with:
          packages-dir: dist/python/

      - name: Update CF Latest Key
        if: contains(fromJSON(steps.gorelease.outputs.metadata).version, '-') == false
        run: |
          ETAG=$(aws cloudfront-keyvaluestore describe-key-value-store \
            --kvs-arn=${{ secrets.AWS_CF_KVSTORE_ARN }} | jq -r '.ETag')
          aws cloudfront-keyvaluestore put-key \
            --if-match=$ETAG \
            --kvs-arn=${{ secrets.AWS_CF_KVSTORE_ARN }} \
            --key=latest \
            --value=${{ fromJSON(steps.gorelease.outputs.metadata).tag }}